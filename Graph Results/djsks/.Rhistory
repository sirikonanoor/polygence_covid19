)
# make cumulative sum
reff_cummulative <- data.frame(t(apply(reff_data, 1, cumsum)))
# rename columns
colnames(reff_cummulative) <- 1:num_steps
# add person index
reff_cummulative <- reff_cummulative %>%
mutate(
person = row_number()
)
# reshape dataframe (pivot longer)
reff_final <- reff_cummulative %>%
pivot_longer(-person,
names_to = "step",
values_to = "infected") %>%
arrange(person)
# make steps integers
reff_final$step <- as.numeric(reff_final$step)
# "factorize" people
reff_final$person <- factor(reff_final$person)
# plot 1 - each line is a person
reff_final %>%
filter(person %in% c(49, 21, 8, 16, 35, 3)) %>%
ggplot(aes(x = step,
y = infected,
colour = person,
group = person)) +
geom_line(lwd = 0.5) +
theme_light() +
labs(
x = "Simulation Step (days)",
y = "Cumulative Number of Infected People"
)
library(dplyr)
library(ggplot2)
library(tidyr)
# Supplement 1
# set threshold for superspreader
super_spreader <- 10
# num steps
num_steps <- 100
# read data in and transpose
reff_data <- read.table("/Users/sirikonanoor/Documents/Polygence/csvfiles/fig4reff.csv",
sep = ",") %>%
t() %>%
as.data.frame() %>%
# keep only superspreaders
filter(
rowSums(.) > super_spreader
)
# make cumulative sum
reff_cummulative <- data.frame(t(apply(reff_data, 1, cumsum)))
# rename columns
colnames(reff_cummulative) <- 1:num_steps
# add person index
reff_cummulative <- reff_cummulative %>%
mutate(
person = row_number()
)
# reshape dataframe (pivot longer)
reff_final <- reff_cummulative %>%
pivot_longer(-person,
names_to = "step",
values_to = "infected") %>%
arrange(person)
# make steps integers
reff_final$step <- as.numeric(reff_final$step)
# "factorize" people
reff_final$person <- factor(reff_final$person)
# plot 1 - each line is a person
reff_final %>%
filter(person %in% c(49, 21, 8, 16, 35, 3)) %>%
ggplot(aes(x = step,
y = infected,
colour = person,
group = person)) +
geom_line(lwd = 0.5) +
theme_light() +
labs(
x = "Simulation Step (days)",
y = "Cumulative Number of Infected People"
)
# Supplement 1
# set threshold for superspreader
super_spreader <- 10
# num steps
num_steps <- 100
# read data in and transpose
reff_data <- read.table("/Users/sirikonanoor/Documents/Polygence/csvfiles/fig4reff.csv",
sep = ",") %>%
t() %>%
as.data.frame() %>%
# keep only superspreaders
filter(
rowSums(.) > super_spreader
)
# make cumulative sum
reff_cummulative <- data.frame(t(apply(reff_data, 1, cumsum)))
# rename columns
colnames(reff_cummulative) <- 1:num_steps
# add person index
reff_cummulative <- reff_cummulative %>%
mutate(
person = row_number()
)
# reshape dataframe (pivot longer)
reff_final <- reff_cummulative %>%
pivot_longer(-person,
names_to = "step",
values_to = "infected") %>%
arrange(person)
# make steps integers
reff_final$step <- as.numeric(reff_final$step)
# "factorize" people
reff_final$person <- factor(reff_final$person)
# plot 1 - each line is a person
reff_final %>%
filter(person %in% c(30, 21, 8, 16, 35, 3)) %>%
ggplot(aes(x = step,
y = infected,
colour = person,
group = person)) +
geom_line(lwd = 0.5) +
theme_light() +
labs(
x = "Simulation Step (days)",
y = "Cumulative Number of Infected People"
)
# Supplement 1
# set threshold for superspreader
super_spreader <- 10
# num steps
num_steps <- 100
# read data in and transpose
reff_data <- read.table("/Users/sirikonanoor/Documents/Polygence/csvfiles/fig4reff.csv",
sep = ",") %>%
t() %>%
as.data.frame() %>%
# keep only superspreaders
filter(
rowSums(.) > super_spreader
)
# make cumulative sum
reff_cummulative <- data.frame(t(apply(reff_data, 1, cumsum)))
# rename columns
colnames(reff_cummulative) <- 1:num_steps
# add person index
reff_cummulative <- reff_cummulative %>%
mutate(
person = row_number()
)
# reshape dataframe (pivot longer)
reff_final <- reff_cummulative %>%
pivot_longer(-person,
names_to = "step",
values_to = "infected") %>%
arrange(person)
# make steps integers
reff_final$step <- as.numeric(reff_final$step)
# "factorize" people
reff_final$person <- factor(reff_final$person)
# plot 1 - each line is a person
reff_final %>%
filter(person %in% c(30, 21, 8, 16, 33, 3)) %>%
ggplot(aes(x = step,
y = infected,
colour = person,
group = person)) +
geom_line(lwd = 0.5) +
theme_light() +
labs(
x = "Simulation Step (days)",
y = "Cumulative Number of Infected People"
)
# Supplement 1
# set threshold for superspreader
super_spreader <- 10
# num steps
num_steps <- 100
# read data in and transpose
reff_data <- read.table("/Users/sirikonanoor/Documents/Polygence/csvfiles/fig4reff.csv",
sep = ",") %>%
t() %>%
as.data.frame() %>%
# keep only superspreaders
filter(
rowSums(.) > super_spreader
)
# make cumulative sum
reff_cummulative <- data.frame(t(apply(reff_data, 1, cumsum)))
# rename columns
colnames(reff_cummulative) <- 1:num_steps
# add person index
reff_cummulative <- reff_cummulative %>%
mutate(
person = row_number()
)
# reshape dataframe (pivot longer)
reff_final <- reff_cummulative %>%
pivot_longer(-person,
names_to = "step",
values_to = "infected") %>%
arrange(person)
# make steps integers
reff_final$step <- as.numeric(reff_final$step)
# "factorize" people
reff_final$person <- factor(reff_final$person)
# plot 1 - each line is a person
reff_final %>%
filter(person %in% c(30, 21, 8, 16, 32, 3)) %>%
ggplot(aes(x = step,
y = infected,
colour = person,
group = person)) +
geom_line(lwd = 0.5) +
theme_light() +
labs(
x = "Simulation Step (days)",
y = "Cumulative Number of Infected People"
)
# Supplement 1
# set threshold for superspreader
super_spreader <- 10
# num steps
num_steps <- 100
# read data in and transpose
reff_data <- read.table("/Users/sirikonanoor/Documents/Polygence/csvfiles/fig4reff.csv",
sep = ",") %>%
t() %>%
as.data.frame() %>%
# keep only superspreaders
filter(
rowSums(.) > super_spreader
)
# make cumulative sum
reff_cummulative <- data.frame(t(apply(reff_data, 1, cumsum)))
# rename columns
colnames(reff_cummulative) <- 1:num_steps
# add person index
reff_cummulative <- reff_cummulative %>%
mutate(
person = row_number()
)
# reshape dataframe (pivot longer)
reff_final <- reff_cummulative %>%
pivot_longer(-person,
names_to = "step",
values_to = "infected") %>%
arrange(person)
# make steps integers
reff_final$step <- as.numeric(reff_final$step)
# "factorize" people
reff_final$person <- factor(reff_final$person)
# plot 1 - each line is a person
reff_final %>%
filter(person %in% c(12, 30, 18, 16, 27, 4)) %>%
ggplot(aes(x = step,
y = infected,
colour = person,
group = person)) +
geom_line(lwd = 0.5) +
theme_light() +
labs(
x = "Simulation Step (days)",
y = "Cumulative Number of Infected People"
)
library(dplyr)
library(ggplot2)
### FIGURE 1:
# Figure 1. a)
data <- read.table("/Users/sirikonanoor/Documents/Polygence/csvfiles/fig.1a.csv",
sep = ",")
colnames(data) <- c("sim_step", "pct_inf")
data %>%
ggplot(aes(x = sim_step,
y = pct_inf)) +
geom_line(size = 1, colour = "red") +
labs(x = "Simulation Step # (days)",
y = "Percent Infected",
color = "Legend") +
theme_light() +
scale_y_continuous(limits = c(0, 100), breaks=seq(0, 100, 10)) +
scale_x_continuous(limits = c(0, 100), breaks=seq(0, 100, 10))
library(dplyr)
library(ggplot2)
### FIGURE 1:
# Figure 1. a)
data <- read.table("/Users/sirikonanoor/Documents/Polygence/csvfiles/fig.1a.csv",
sep = ",")
colnames(data) <- c("sim_step", "pct_inf")
data %>%
ggplot(aes(x = sim_step,
y = pct_inf)) +
geom_line(size = 1, colour = "red") +
labs(x = "Simulation Step # (days)",
y = "Percent Infected",
color = "Legend") +
theme_light() +
scale_y_continuous(limits = c(0, 100), breaks=seq(0, 100, 10)) +
scale_x_continuous(limits = c(0, 100), breaks=seq(0, 100, 10))
library(dplyr)
library(ggplot2)
### FIGURE 1:
# Figure 1. a)
data <- read.table("/Users/sirikonanoor/Documents/Polygence/csvfiles/fig.1a.csv",
sep = ",")
colnames(data) <- c("sim_step", "pct_inf")
data %>%
ggplot(aes(x = sim_step,
y = pct_inf)) +
geom_line(size = 1, colour = "red") +
labs(x = "Simulation Step # (days)",
y = "Percent Infected",
color = "Legend") +
theme_light() +
scale_y_continuous(limits = c(0, 100), breaks=seq(0, 100, 10)) +
scale_x_continuous(limits = c(0, 100), breaks=seq(0, 100, 10))
# Figure 1. a)
data <- read.table("/Users/sirikonanoor/Documents/Polygence/csvfiles/fig.1b.csv",
sep = ",")
# Figure 1. a)
data <- read.table("/Users/sirikonanoor/Documents/Polygence/csvfiles/fig.1b.csv",
sep = ",")
# Figure 1. a)
data <- read.table("/Users/sirikonanoor/Documents/Polygence/csvfiles/fig.1b.csv",
sep = ",")
# Figure 1. a)
data <- read.table("/Users/sirikonanoor/Documents/Polygence/csvfiles/fig.1b.csv",
sep = ",")
colnames(data) <- c("sim_step", "pct_inf")
data %>%
ggplot(aes(x = sim_step,
y = pct_inf)) +
geom_line(size = 1, colour = "red") +
labs(x = "Simulation Step # (days)",
y = "Percent Infected",
color = "Legend") +
theme_light() +
scale_y_continuous(limits = c(0, 100), breaks=seq(0, 100, 10)) +
scale_x_continuous(limits = c(0, 100), breaks=seq(0, 100, 10))
# Figure 1. a)
data <- read.table("/Users/sirikonanoor/Documents/Polygence/csvfiles/fig.1a.csv",
sep = ",")
colnames(data) <- c("sim_step", "pct_inf")
data %>%
ggplot(aes(x = sim_step,
y = pct_inf)) +
geom_line(size = 1, colour = "red") +
labs(x = "Simulation Step # (days)",
y = "Percent Infected",
color = "Legend") +
theme_light() +
scale_y_continuous(limits = c(0, 100), breaks=seq(0, 100, 10)) +
scale_x_continuous(limits = c(0, 100), breaks=seq(0, 100, 10))
# Figure 1. b)
data <- read.table("/Users/sirikonanoor/Documents/Polygence/csvfiles/fig.1c.csv",
sep = ",")
colnames(data) <- c("sim_step", "pct_inf")
data %>%
ggplot(aes(x = sim_step,
y = pct_inf)) +
geom_line(size = 1, colour = "red") +
labs(x = "Simulation Step # (days)",
y = "Percent Infected",
color = "Legend") +
theme_light() +
scale_y_continuous(limits = c(0, 100), breaks=seq(0, 100, 10)) +
scale_x_continuous(limits = c(0, 100), breaks=seq(0, 100, 10))
# Figure 1. b)
data <- read.table("/Users/sirikonanoor/Documents/Polygence/csvfiles/fig.1c.csv",
sep = ",")
colnames(data) <- c("sim_step", "pct_inf")
data %>%
ggplot(aes(x = sim_step,
y = pct_inf)) +
geom_line(size = 1, colour = "red") +
labs(x = "Simulation Step # (days)",
y = "Percent Infected",
color = "Legend") +
theme_light() +
scale_y_continuous(limits = c(0, 100), breaks=seq(0, 100, 10)) +
scale_x_continuous(limits = c(0, 100), breaks=seq(0, 100, 10))
# Figure 1. c)
data1 <- read.table("/Users/sirikonanoor/Documents/Polygence/csvfiles/fig.1c_infonly.csv",
sep = ",")
colnames(data1) <- c("sim_step", "pct_inf1")
data2 <- read.table("/Users/sirikonanoor/Documents/Polygence/csvfiles/fig.1c_vacc.csv",
sep = ",")
colnames(data2) <- c("sim_step", "pct_inf2")
data <- left_join(data1, data2, by='sim_step')
colors <- c("0" = "red",
"10" = "blue")
data %>%
ggplot(aes(x = sim_step)) +
# first line
geom_line(aes(y = pct_inf1,
color = "0"),
size = 1) +
# second line
geom_line(aes(y = pct_inf2,
color = "10"),
size = 1) +
labs(x = "Simulation Step # (days)",
y = "Percent Infected",
color = "Percent Vaccinated") +
scale_color_manual(values = colors) +
theme_light()  +
theme(legend.position = (c(0.7, 0.5)),
legend.background = element_rect(fill = "lightgray")) +
scale_y_continuous(limits = c(0, 100), breaks=seq(0, 100, 10)) +
scale_x_continuous(limits = c(0, 100), breaks=seq(0, 100, 10))
# Figure 1. c)
data1 <- read.table("/Users/sirikonanoor/Documents/Polygence/csvfiles/fig.1c_infonly.csv",
sep = ",")
colnames(data1) <- c("sim_step", "pct_inf1")
data2 <- read.table("/Users/sirikonanoor/Documents/Polygence/csvfiles/fig.1c_vacc.csv",
sep = ",")
colnames(data2) <- c("sim_step", "pct_inf2")
data <- left_join(data1, data2, by='sim_step')
colors <- c("0" = "red",
"10" = "blue")
data %>%
ggplot(aes(x = sim_step)) +
# first line
geom_line(aes(y = pct_inf1,
color = "0"),
size = 1) +
# second line
geom_line(aes(y = pct_inf2,
color = "10"),
size = 1) +
labs(x = "Simulation Step # (days)",
y = "Percent Infected",
color = "Percent Vaccinated") +
scale_color_manual(values = colors) +
theme_light()  +
theme(legend.position = (c(0.7, 0.5)),
legend.background = element_rect(fill = "lightgray")) +
scale_y_continuous(limits = c(0, 100), breaks=seq(0, 100, 10)) +
scale_x_continuous(limits = c(0, 100), breaks=seq(0, 100, 10))
# Figure 1. d)
data <- read.table("/Users/sirikonanoor/Documents/Polygence/csvfiles/fig.1d.csv",
sep = ",")
colnames(data) <- c("sim_step", "pct_inf")
data %>%
ggplot(aes(x = sim_step,
y = pct_inf)) +
geom_line(size = 1, colour = "red") +
labs(x = "Simulation Step # (days)",
y = "Percent Infected",
color = "Legend") +
theme_light() +
scale_y_continuous(limits = c(0, 100), breaks=seq(0, 100, 10)) +
scale_x_continuous(limits = c(0, 100), breaks=seq(0, 100, 10))
# Figure 1. e)
data1 <- read.table("/Users/sirikonanoor/Documents/Polygence/csvfiles/fig.1e_infonly.csv",
sep = ",")
colnames(data1) <- c("sim_step", "pct_inf1")
data2 <- read.table("/Users/sirikonanoor/Documents/Polygence/csvfiles/fig.1e_vacc.csv",
sep = ",")
colnames(data2) <- c("sim_step", "pct_inf2")
data <- left_join(data1, data2, by='sim_step')
colors <- c("0" = "red",
"10" = "blue")
data %>%
ggplot(aes(x = sim_step)) +
# first line
geom_line(aes(y = pct_inf1,
color = "0"),
size = 1) +
# second line
geom_line(aes(y = pct_inf2,
color = "10"),
size = 1) +
labs(x = "Simulation Step # (days)",
y = "Percent Infected",
color = "Percent Vaccinated") +
scale_color_manual(values = colors) +
theme_light() +
theme(legend.position = (c(0.7, 0.5)),
legend.background = element_rect(fill = "lightgray")) +
scale_y_continuous(limits = c(0, 100), breaks=seq(0, 100, 10)) +
scale_x_continuous(limits = c(0, 100), breaks=seq(0, 100, 10))
# Figure 1. e)
data1 <- read.table("/Users/sirikonanoor/Documents/Polygence/csvfiles/fig.1e_infonly.csv",
sep = ",")
colnames(data1) <- c("sim_step", "pct_inf1")
data2 <- read.table("/Users/sirikonanoor/Documents/Polygence/csvfiles/fig.1e_vacc.csv",
sep = ",")
colnames(data2) <- c("sim_step", "pct_inf2")
data <- left_join(data1, data2, by='sim_step')
colors <- c("0" = "red",
"10" = "blue")
data %>%
ggplot(aes(x = sim_step)) +
# first line
geom_line(aes(y = pct_inf1,
color = "0"),
size = 1) +
# second line
geom_line(aes(y = pct_inf2,
color = "10"),
size = 1) +
labs(x = "Simulation Step # (days)",
y = "Percent Infected",
color = "Percent Vaccinated") +
scale_color_manual(values = colors) +
theme_light() +
theme(legend.position = (c(0.7, 0.5)),
legend.background = element_rect(fill = "lightgray")) +
scale_y_continuous(limits = c(0, 100), breaks=seq(0, 100, 10)) +
scale_x_continuous(limits = c(0, 100), breaks=seq(0, 100, 10))
